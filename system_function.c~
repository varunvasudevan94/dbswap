#include "system_function.h"
#include <time.h>

int create_swap_directory(char *dir_name){
      char cmd_exec[1000]="mkdir ";
      strcat(cmd_exec,dir_name);  
      if (system(cmd_exec)!=-1)
          return TRUE;
        return FALSE;
}

int command_git(char *cmd_exec,char *dir_name){
	strcat(cmd_exec,dir_name);

        FILE *fp;
        char path[1035];


        fp = popen(cmd_exec, "r");
        if (fp == NULL) {
          printf("Failed to run command\n" );
          exit(1);
        } 

        /* Read the output a line at a time - output it. */
        while (fgets(path, sizeof(path)-1, fp) != NULL) {
          printf("%s", path);
        
        }
        //fill for false
        /* close */
        pclose(fp);
        return TRUE;

}

int init_dir(char *dir_name){
        char cmd_exec[1000]="git init ";
	command_git(cmd_exec,dir_name);
	
	return TRUE;	        
}

int add_swap_file(char *dir_name){
	char cmd_exec[1000]="git add -A  ";
	command_git(cmd_exec,dir_name);

	return TRUE;
}

int commit_swap_file(char *dir_name,char *file_name){
	char cmd_exec[1000]="git commit -m  ";
	char commit_message[1000];

	time_t t = time(NULL);
	struct tm tm = *localtime(&t);

	sprintf(commit_message,"now: %d-%d-%d %d:%d:%d", tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);

	
	char full_file_path[1000];
	strcpy(full_file_path,dir_name);
	strcat(full_file_path,file_name);
	command_git(cmd_exec,full_file_path);	


	return TRUE;

}



